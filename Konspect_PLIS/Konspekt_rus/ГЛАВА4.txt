ГЛАВА 4. КОМПЬЮТЕРНЫЕ ОНТОЛОГИИ ПдО
4.1. Системно-онтологический анализ ПдО. Понятие компьютерной онтологии
     Под анализом обычно понимается вид исследования, при котором реальный или мыслимый объект расчленяется на составляющие части (элементы) и исследуются эти элементы и связи между ними. Анализ предметной области представляет особый вид научной деятельности, в результате которой строится интерпретационная модель предметных знаний (в широком смысле) [98]. В процессе анализа последние делятся на инвариантные и прагматические знания, концептуальные составляющие которых представляют онтологические знания ПдО.
     Некоторые идеи по разработке методологии проектирования онтологии ПдО берут своё начало в литературе по объектно-ориентированному подходу (ООП), возникшему как технология программирования больших программных продуктов [99]. Однако разработка онтологий как иерархической структуры понятий (концептов) отличается от проектирования объектов как классов и отношений в объектно-ориентированном программировании. Последний сосредотачивается главным образом на методах описания классов – программист принимает проектные решения, основанные на операторных свойствах класса, тогда как разработчик онтологии принимает эти решения, основываясь на структурных свойствах класса. В результате структура понятий и отношения между понятиями в онтологии отличаются от структуры классов объектов подобной ПдО в объектно-ориентированной программе [100]. Кроме того, при разработке онтологии внутреннее содержимое понятия эксплицируется всегда, в то время как в объектно-ориентированном программировании зачастую применяется метод инкапсуляции как способ ограничения доступа к внутреннему содержимому объекта.
     Системный подход к познанию ориентирует аналитика на рассмотрение любой ПдО с позиций закономерностей системного целого и взаимодействия составляющих его частей. Системность знаний исходит из многоуровневой иерархической организации любой сущности, то есть все объекты, процессы и явления можно рассматривать как множество более мелких подмножеств (признаков, деталей) и, наоборот, любые объекты можно (и нужно) рассматривать как элементы более высоких классов обобщений.
     Начало 90-х годов прошлого столетия считается зарождением парадигмы компьютерных онтологий. Она была сформулирована как попытка сгладить (и по возможности устранить) всё чаще проявляющиеся разного рода противоречия при функционировании и внедрении интеллектуальных систем с использованием баз знаний предметных областей. Ярким представителем таких систем на то время были экспертные системы (ЭС). Они успешно и эффективно функционировали в пределах одного коллектива и на уровне коммерческих образцов. У разработчиков постоянно возникал вопрос: “Как обеспечить продвижение этих образцов к конечному пользователю?”. Были предложены разработки оболочек – “пустых” ЭС и ряд других новшеств. Но они не имели решающего значения. Напрашивался вывод, что для эффективного функционирования ЭС на самом важном этапе “жизненного цикла” – функционирования у конечного пользователя при решении реальных задач – необходимо к каждой ЭС “приложить” эксперта в соответствующей ПдО. Необходимость присутствия эксперта объяснялась, в частности, быстротечностью изменения знаний во многих предметных областях и соответственно необходимостью обновления базы знаний ЭС в “реальном времени”. В тех же ПдО, где знания обладали относительной инвариантностью, ЭС продолжали эффективно функционировать.
     Сказанное выше и ряд других факторов “подтолкнули” к разработке парадигмы компьютерных онтологий, основные принципы которой были сформулированы в [7].
     1. Доходчивость, ясность (Clarity). Термины (и понятия) онтологии должны отражать реальную действительность. Их символьные обозначения (знаки) должны формироваться на основе общепринятых правил в семиотике и должны выражать общепринятые смыслы реальных объектов. В свою очередь, эти смыслы извлекаются из общепринятых определений терминов (понятий), зафиксированных в толковых словарях, различных глоссариях ПдО. Суждения, входящие в определения, формализуются на основе формального общепринятого аппарата в виде тождественно истинных логических аксиом.
     2. Обоснованность, связность (Coherency). Формирование начального набора понятий онтологии и их добавление должно быть обоснованным, определяемым, в первую очередь, требованиями предполагаемой совокупности решаемых задач. Логические аксиомы начального набора понятий должны быть непротиворечивыми. Для этого должен быть предусмотрен механизм логического вывода, который, в том числе, проверяет на непротиворечивость добавляемые аксиомы и выводимые в онтологии утверждения.
     3. Расширяемость (Extendibility). Ядром онтологии являются первоначально введенные (спроектированные) понятия и описывающие их аксиомы. В онтологии должен быть предусмотрен механизм расширения (ограничения) совместно используемых словарей понятий без нарушения целостности системы.
     4. Минимальное влияние кодирования (Minimal encoding bias). В онтологической системе (ОнС) должен быть реализован принцип совместного использования онтологий, который предполагает: спецификацию онтологии на уровне представления, а не символьного кодирования; запись такой спецификации на общепринятом и платформонезависимом языке описания онтологий можно передать для использования любому программному агенту.
     5. Минимальные онтологические обязательства (Minimal ontological commitment). Этот принцип перекликается с принципами обоснованности и расширяемости/ограничения. Важно, чтобы множество понятий онтологии отображало концептуальную структуру ПдО, относительно стабильную на протяжении “жизненного цикла” ОнС. А последняя предоставляла возможность расширения или специализации отдельных ветвей онтологического графа (онтографа, ОГ). Отделение концептуальных знаний от знаний, выраженных фактами, является стратегией построения ОнС, а точнее – онтологических баз знаний.
     В отличие от онтологии как философской дисциплины остановимся на рассмотрении компьютерной (формальной) онтологии предметной области, онтологии верхнего уровня и онтологии домена предметных областей. Последняя (в том числе) имеет важное значение для объединения (интеграции) концептуальных знаний близких предметных областей или реализации технологии системной интеграции трансдисциплинарных научных знаний. Мы также выделяем начальную онтологию ПдО, являющуюся инициализирующей доминантой при реализации технологии автоматизированного построения онтологии ПдО.
     Возвращаясь к определению понятия онтологии ПдО, напомним самые известные из них. Это первоначальное определение Т. Груббера, сформулированное в [7], и последующее его уточнение – “Онтология – это формальная спецификация согласованной концептуализации”1, сформулированное в [8]. Другим важным определением онтологии ПдО является определение Н. Гуарино, сформулированное в докладе на международной конференции FOIS’98 [86] – “Онтология – это формальная теория, ограничивающая возможные концептуализации мира”. На основе этих определений разные исследователи формулируют свои, частные определения онтологии ПдО – в соответствии с их конкретной областью профессиональных интересов2. Тематика и практическая направленность наших исследований (онтология как средство построения баз знаний и трансдисциплинарных научных исследований) предопределяет следующее определение компьютерной онтологии ПдО.
     Определение 4.1. Компьютерная онтология ПдО – это:
1) иерархическая структура конечного множества понятий, описывающих заданную предметную область;
2) структура представляет собой онтограф, вершинами которого являются понятия, а рёбрами – семантические отношения между ними;
3) понятия и отношения интерпретируются в соответствии с общезначимыми функциями интерпретации, взятыми из электронных источников знаний из заданной ПдО;
4) дополнительные интерпретации понятий и отношений определяются аксиомами и ограничениями их области действия;
5) формально онтограф описывается на одном из языков описания онтологий;
6) функции интерпретации и аксиомы описаны в некоторой подходящей формальной теории.
     Общепринято онтологию некоторой ПдО формально представлять упорядоченной тройкой [3, 5, 10, 86]
                                                             (4.1)
где  – конечные множества соответственно:  – концептов (понятий, терминов) предметной области,  – отношений между ними,  – функций интерпретации  и/или .
     Рассмотрение граничных случаев множеств (1): =?; ??; =?; ?? во всех четырёх комбинациях значений  и  даёт различные варианты онтологических конструкций, начиная от простого словаря и таксономии до формальной структуры концептуальной базы знаний для высокоинтеллектуальных знание-ориентированных систем. Подробное рассмотрение различных указанных комбинаций с их содержательной интерпретацией рассмотрено в [101].
     Онтология в том виде, что была определена в [86] и названа формальной онтологией, представляется одним из центральных компонентов любой ОУИС. По своей функциональной полноте и степени формальности различаются три вида онтологий: простая, полная (или строгая) и множество промежуточных или неполных онтологий3.
     Простая онтология – это такая онтология, в которой =?; =?. Она служит (в основном) для однозначного восприятия научным сообществом понятий в соответствующей прикладной области.
     Строгая или полная онтология (??; ??) – это такая онтология, в которой множества концептов и концептуальных отношений максимально полные, а к функциям интерпретации добавляются аксиомы, определения и ограничения. При этом описания всех компонент представлены на некотором формальном языке, доступном для их интерпретации компьютером. Схема формальной модели полной онтологии описывается четвёркой:
                                                         (4.2)
где     – множество концептов;
      – множество концептуальных отношений между ними;
      – конечное множество функций интерпретации, заданных на концептах и/или отношениях;
      – конечное множество аксиом, которые используются для записи всегда истинных высказываний (определений и ограничений);
     D – множество дополнительных определений понятий;
     Rs – множество ограничений, определяющих область действия понятийных структур.
     Далее мы ещё вернемся к трактовке и соотношению множеств  и .
     Полная (или компьютерная) онтология является (формальным) выражением концептуальных знаний о предметной области и по своей значимости сопоставима с базой ЗОИС, а её построение является специфической формой человеческого творчества. Творческий процесс можно представить совокупностью операций-процедур с суждениями, утверждениями, понятиями и отношениями между ними. А последние являются фундаментом, основой для построения составной части научной теории – онтологической базы знаний в заданной предметной области. При этом такие знания описываются в декларативной форме.
     Множество промежуточных или неполных онтологий (=?, ??; ??, =?) – это когда для каждого концепта (или большей части) добавлены аксиомы и определения, представленные на ЕЯ.
     Одним из распространённых вариантов неполной онтологии является структура вида , где множество  в явном виде отсутствует (), в предположении, что концепты  общеизвестны (определены по умолчанию) либо (и) достаточно полно интерпретированы отношениями .
     Такая схема классификации по функциональному признаку согласуется с описанием [86]: “Онтология или концептуальная модель предметной области состоит из иерархии понятий предметной области, связей между ними и законов, которые действуют в рамках этой модели”.
     Известно, что проектируемые средства информатики в соответствии с их проблемной ориентацией базируются на некоторой совокупности фундаментальных принципов, методик и алгоритмов. Также известны многочисленные разработки в области обработки ЕЯТ [43, 44, 102, 103, 104, 105 и др.], в которой ввиду огромной сложности решаемых задач принимаются те или иные ограничения, снижающие эффективность средств обработки. Авторами были рассмотрены и проанализированы разработки, в которых формальная онтология играет существенную роль. В результате были выявлены главные недостатки, снижающие эффективность реализации отдельных процедур и конечных результатов в целом.
     Известны общие совокупности методов, принципов, процедур и атрибутов системного анализа как научного познания в любой ПдО [106, 107 и др.]. При конкретизации ПдО конкретизируются и средства системного анализа. Парадигма компьютерных онтологий, развиваемая во взаимодействии со средствами и методами системного анализа, положила начало развития новой ветви средств и методов системного анализа ПдО – системно-онтологического анализа (или подхода).
     Центральной идеей системно-онтологического подхода (СОП) является разработка онтологических средств поддержки решения прикладных задач – полифункциональной онтологической системы. Такая система (точнее, её концептуальная часть) описывается двойкой (4.3) и представляет онтологию ПдО, состоящую из онтологии объектов и онтологии процессов, и онтологию задач [102, 103].
                                                      (4.3)
     На рис. 4.1 представлена схема онтологий-компонентов предметной области, проблемного пространства (ПрП). ПрП – это модель всех таких аспектов или компонент ПдО, с которыми связаны (опосредственно или непосредственно) знания, требующиеся при решении различных задач в этой ПдО. Всякое ПрП состоит из двух блоков: инвариантной (относительно неизменной) части и множества изменяемых частей, соответствующих отдельным задачам. В составе инвариантной части, например в методологии SMEE (Structured Methodology for Elicitation of Expertise), выделяют семь типов компонент: объекты, инструменты, операторы, операции, конечные продукты, побочные продукты и ограничения [108]. Эти типы компонент – суть понятия, которые хорошо группируются в онтологии объектов и процессов, представленных на рис. 4.1. На нём приняты следующие обозначения:
–  – онтология множества объектов (понятий, концептов) ПдО, которая рассматривается как иерархическая структура классов, подклассов и элементов классов;
– – онтология множества процессов ПдО, которая рассматривается как иерархическая структура процессов, подпроцессов, действий и операций;
– – онтология совокупности задач (типовых наборов), которые могут быть поставлены и решены в ПдО. Рассматривается как иерархическая структура задач, подзадач, процедур и операторов.

Рис. 4.1. Схема онтологий-компонентов предметной области
     Итак, главной задачей настоящей главы является разработка методологии проектирования онтологических знаний ПдО, состоящих из онтологии объектов, онтологии процессов и онтологии задач. Такая методология является важной составляющей при построении онтологизированных систем знаний предметных областей в рамках программы “Информационные технологии – Междисциплинарные научные исследования” [109].
4.2. Лингвистические онтологии
     Применение онтологического подхода для автоматической обработки текстов на естественном языке предполагает сопоставление понятиям онтологии предметной области (к которой принадлежит множество текстов) языковых выражений (слов и словосочетаний), которыми понятия могут быть выражены в текстах. Процедура сопоставления понятий и языковых выражений может быть реализована различными способами [101].
     1. К понятиям уже разработанной онтологии ПдО приписываются языковые единицы. По сложности реализации этот способ является самым простым, но ему присущ ряд очевидных недостатков:
а) имена понятий достаточно громоздкие, неестественные, с ними трудно оперировать как разработчикам, так и возможным пользователям;
б) излишняя многозначность лексической единицы, возникающая из-за того, что одно и то же слово может соответствовать слишком большому количеству понятий в зависимости от контекста;
в) онтологическая гипотеза Сепира-Уорфа (то, что не описывается словами, не может быть отражено в онтологии).
     2. Установление соответствий между иерархическими лексическими ресурсами (например, WordNet) и некоторой (концептуальной) онтологией. WordNet-ресурсы описывают лексические отношения между значениями слов, представленные в виде отдельных единиц в иерархической сети – синсетов. Отношения между лексическими единицами в значительной мере отражают отношения объектов внешнего мира, поэтому такие ресурсы часто рассматриваются как особый вид онтологий – лексические или лингвистические онтологии.
     Главной характеристикой лингвистических онтологий является то, что они связаны со значениями языковых выражений (слов, именных групп и т.п.). Лингвистические онтологии охватывают большинство слов языка (в идеале – полный набор слов ЕЯ, структурированных в языковую картину мира) и одновременно имеют онтологическую структуру, проявляющуюся в отношениях между понятиями. Поэтому лингвистические онтологии могут рассматриваться как особый вид лексической базы данных и особый тип онтологии.
     Лингвистические онтологии отличаются от формальных онтологий по степени формализации. Поэтому предполагается, что разработчики такого рода ресурсов разрабатывают иерархию лексических значений естественного языка, а для более строгого описания знаний о мире необходимо сопоставить такие ресурсы с какими-либо формальными онтологиями. Так, содержанием одного из проектов является установление отношений между WordNet и EuroWordNet, c одной стороны, и формальной онтологией SUMO – с другой. Проект состоит в том, чтобы установить соответствие между синсетами WordNet и понятиями онтологии, при котором каждый синсет WordNet либо напрямую сопоставляется с понятием онтологии, либо является гипонимом для некоторого понятия или примером понятия онтологии.
Участники другого проекта – OntoWordNet – считают, что недостаточно провести формальную склейку ресурса типа WordNet и формальной онтологии: необходима значительная реструктуризация исходного лексического ресурса. Аналогичная работа проводится и в проекте Cyc.
     3. Разработка единого ресурса (смешанной онтологии), в котором были бы сбалансированы обе части: система понятий и система лексических значений, – что заключается в разумном разделении этих единиц в создаваемом ресурсе и аккуратном описании их взаимосвязей. Такой подход реализуется, например, в онтологии Mikrokosmos.
4.2.1. Сравнительный анализ онтологий
     В настоящее время в мире известны несколько широко используемых лингвистических, концептуальных и смешанных онтологий, на основе которых разрабатываются информационные системы с обработкой знаний (представленных, в том числе, естественно-языковыми текстами) в различных предметных областях. В этом подразделе рассмотрим лингвистическую онтологию WordNet, а описания онтологий SUMO и Mikrokosmos представлены в Приложении А.
     WordNet. Лингвистическая онтология для лексики английского языка разрабатывалась в середине 1980-х годов в лаборатории когнитологии Принстонского университета (штат Нью Джерси, США), под руководством проф. Дж. А. Миллера. С 1994 года свободно распространяется в сети Интернет и представляет собой лексикографическую базу данных, структурированную в соответствии с лексико-семантическими отношениями: синонимия, антонимия, гипонимия, меронимия и морфологические отношения [110, 111].
     Важнейшим отношением у WordNet является подобие значений. В основу понятия “синонимия” положено следующее: два слова являются синонимичными в контексте С, если замена одного на другое в С не изменяет его истинности.
      Итак, синонимические ряды могут образовывать лишь слова одной части речи, поскольку синонимы должны быть взаимозаменяемыми, а слова разных синтаксических категорий не могут заменять одно другого.
      Антонимия – это отношение противоположности, которое представляет собой лексическое отношение между формами слов (словоупотреблениями), а не семантическое отношение между значениями слов. Это принуждает различать семантические отношения между словоупотреблениями и семантические отношения между значениями слов. Антонимия у WordNet является центральным организующим принципом для прилагательных и наречий.
      В отличие от синонимии и антонимии, которые являются лексическими отношениями между формами слов, гипонимия и гиперонимия являются семантическими отношениями между значениями. Поскольку обычно понятие имеет только один гипероним, оно порождает иерархическую семантическую структуру, в которой считается, что гипоним принадлежит гиперониму. Гипоним вбирает у себя все черты общего понятия и прибавляет черты, которые отличают его от гиперонима и от других гипонимов этого же гиперонима. Это центральный принцип организации существительных в системе WordNet.
      Другим типом отношений является "часть-целое", которое в лингвистике известно как меронимия / голонимия. Понятие, представленное набором {x, x', ...}, является меронимом понятия, представленного набором {y, y', …}, если носитель языка воспринимает предложение, сконструированное из такой основы, как: Y имеет X (как часть) или же Х является частью Y. Отношение меронимии может использоваться для построения иерархии частей (с некоторыми ограничениями, поскольку мероним может иметь несколько голонимов).
      Морфологические отношения между формами слов являются важной частью лексических отношений. В системе WordNet сначала интерес ограничивался лишь семантическими отношениями; не было проектов, которые бы учитывали морфологические отношения. Тем не менее со временем программы совершенствовались и стало очевидным, что WordNet должен служить любым запросам, в том числе связанным с морфологическими характеристиками [112].
     База данных WordNet разделена на пять лексико-грамматических классов: существительное, глагол, прилагательное, наречие и функциональные слова. Части речи организованы в иерархию синонимических множеств (узлов), называемых синсетами. Каждый синсет представляет одно базовое лексическое понятие и состоит из множества слов и устойчивых словосочетаний, равнозначных в некотором контексте. Синсеты связаны между собой отношениями различных типов.
     Математической моделью WordNet служит граф V = (X, R), множество вершин в котором разбито на два непересекающиеся подмножества: . Вершины из  соответствуют словам и словосочетаниям, вершины из  – их значениям (смыслам, толкованиям). Каждое из значений соотносится с одной из частей речи: существительным, глаголом, прилагательным или наречием. Множество рёбер также разбито на два непересекающиеся подмножества: . Рёбра из  связывают слова со значениями, т.е. элементы из  с элементами из . Эти рёбра представляют отношения входящие в произведение . Рёбра , принадлежащие второму подмножеству, связывают слова со словами и значения со значениями, т.е. представляют отношения, входящие в произведения  и  [4]. Объединение слов и словосочетаний в синсеты выражает отношение синонимии. Другие отношения (из перечисленных выше) задают типы рёбер из . В WordNet выделено 14 базовых типов таких отношений (помимо них используются обратные отношения для каждого из перечисленных ниже типов): антоним; “имеет отношение к”; глагол, на основе которого образовано причастие; слово, на основе которого образовано наречие; действие, сопровождающее данное действие; глагольная группа; атрибут; “смотри также”; подобие; род-вид, вид-род; целое-часть, часть-целое; “сделан из”, “служит субстанцией для”; множество-элемент, элемент- множество; цель-способ, способ-цель.
     Технически, WordNet является электронным тезаурусом, определяющим широкий класс значений слов, связанных между собой семантическими указателями. Логическая структура WordNet показана на рис. 4.2.
                                         словоформы      значения слова (синсеты)
Рис. 4.2. Логическая структура WordNet
     Рассмотрим пример записи синсета в базе данных.
00047131 04 n 02 accession 0 addition 0 001 @
09536731 n 0000 | something added to what you
have already; "the librarian shelved the new accessions";
"he was a new addition to the staff"
     Первая часть записи утверждает, что число 00047131 является уникальным идентификатором синсета существительного {accession, addition}. Часть записи между символами “@” и “|” указывает, что этот синсет непосредственно подчинён синсету с идентификатором 09536731. Последний синсет соответствует значению “acquisition”. И последняя часть записи (после символа “|”) представляет толкование синсета и некоторые примеры употребления слов, входящих в синсет.
     Онтология WordNet очень популярна в научных исследованиях по компьютерной обработке естественного языка и поиску информации в сети (Information Retrieval). Она постоянно обновляется. В настоящее время для Windows-пользователей доступна версия 2.1, для UNIX-подобных ОС – версия 3.0 и у неё существует более 82 тыс. синсетов существительных, более 18 тыс. синсетов прилагательных, более 3600 синсетов наречий и около 14 тыс. синсетов глаголов (на сегодняшний день она включает более 147 тыс. английских слов и фраз). Другие аспекты описания WordNet и EuroWordNet и большое количество примеров их использования приведено в [101, 110, 112].
     Известны и другие (смешанные и концептуальные) онтологии верхнего уровня Sensus [113], Omega [114], Cyc [117], DOLCE [118], PropBank [119, 120], FrameNet ?121, 122, 123?. Некоторые данные, характеризующие упомянутые онтологии, приведены в таблице 4.1.
     Анализ описаний онтологий показал, что наибольший интерес для разработчиков представляют (кроме лингвистической онтологии WordNet) онтологии Mikrokosmos, SUMO и Cyc (онтографы первых двух онтологий представлены в расширенном варианте в Приложении А).
     Верхний уровень онтологии Cyc разрабатывался в соответствии с общей концепцией онтологии – “представить все знания о мире”. Он не имеет явного разграничения на общепринятые группы категорий “Материальное и Абстрактное” (M&A), “Продолжительное и Событийное” (C&O) и “Независимое, Относительное и Связанное” (I&R&O) и имеет свою специфическую концептуальную структуру. Кроме того, наиболее разработанная часть проекта Cyc является коммерческой и недоступной для общего пользования. А доступную часть проекта онтологии (OpenCyc) можно рекомендовать для адаптации только её многолетним сторонникам, уже имеющим соответствующий опыт разработки. В качестве положительных моментов Cyc можно отметить наличие формального языка описания CycL, постоянно развивающиеся и доступные (в режиме клиент-сервер) базы знаний и обширную аксиоматизацию [117].
     Для разработчиков онтологии ПдО, впервые реализующих такой проект, мы рекомендуем для адаптации одну из двух онтологий, онтографы которых представлены на рис. А.1 и рис. А.2.
     Онтология Mikrokosmos (рис. А.1) имеет достаточно гибкую иерархическую структуру
     
Таблица 4.1. Основные характеристики онтологий
№
п./п.Наименование онтологииТип
онтологииРазработчикБраузерКол-во концептов (лексем)Формальная аксиоматизацияИнтеграция с другими
онтологиями1WordNetЛингвистическаяPrinceton UniversityWordNetОколо 100 тыс.-SUMO,
FrameNet2SensusСмешаннаяISI USCOntosaurusболее
70 тыс.––3OmegaЛингвистическаяISI USCOmegaоколо
120 тыс.–WordNet, 
Mikrokosmos4MikrokosmosЛингвистическаяCLR UNMSMikrokosmosболее
7 тыс.+WordNet,
Omega5OpenCycКонцептуальнаяCycorpOpencycболее
100 тыс.+WordNet6DOLCEКонцептуальнаяLAO ICSTDOLCEоколо
4 тыс.+–7PropBankсмешаннаяUniversity PennState–более 
4300–FrameNet
VerbNet8FrameNetсмешаннаяISI, Berkeley, CAFrame
Grapherоколо
900 фреймов+WordNet
PropBank
SUMO9SUMOКонцептуальнаяTeknowledge Corporation, SUO WGSUMOболее
1000+FrameNet,
WordNet,
EMELD
с явным приоритетом группы категорий I&R&O. Две другие группы категорий распределены по ветвям иерархического дерева и не имеют чётко выраженного очертания. Онтология имеет практическую направленность, в которой не все ветви дерева разработаны одинаково. Поэтому, она может быть рекомендована для адаптации в тех предметных областях, понятия и термины в которых наиболее широко представлены в категориях и концептах Mikrokosmos. Информация об онтологии доступна как на веб-портале разработчиков, так и в многочисленных публикациях [115, 116 и др.]. Кроме того, в проекте предусмотрена системная интеграция онтологических знаний предметной области с общелингвистической онтологией для испанского языка.
     Многие фрагменты онтологии SUMO (рис. А.2) представляют собой процесс адаптации различных ОВУ в одну онтологию верхнего уровня. В ней явно выражен приоритет группы категорий M&A с последующим преобладанием группы категорий C&O. Следует подчеркнуть (что также отмечено разработчиками SUMO), что ветвь онтологического дерева для категории Материальное разработана существенно глубже, чем ветвь для категории Абстрактное. К преимуществам SUMO можно отнести возможность трансляции описания онтологии на любой из основных языков представления знаний, наличие онтологии среднего уровня, интегрированной с верхним уровнем SUMO, разработанные примеры практического применения, а также связь с WordNet.
     Поэтому, данную онтологию можно рекомендовать для адаптации с онтологиями предметных областей, у которых явно преобладают материальные концепты.
4.2.2. Языково-онтологическая картина мира
     Онтология ЯКМ отличается от представленных в табл. 4.1 ОВУ тем, что лингвистическая часть ориентируется на украинский или русский язык. Её рассмотрение было начато в главе 1 и как определено в [11], основной задачей ЯКМ является фиксация содержания входной информации, причём информационные модели такой фиксации должны адекватно воссоздавать вычислительные процедуры в процессе интерпретации ЕЯТ.
     Для решения этой задачи компьютерно-ориентированная ЯКМ должна отвечать следующим требованиям:
– системной полноты как в значении множества лексем данного языка, так и в значении формул их толкования;
– иметь в своем арсенале инструментарий для семантико-синтаксического анализа входного текста и, прежде всего, решение проблемы потенциальной многозначности выражения содержания входного текста;
– предоставлять возможности использования в качестве семиотической основы для фиксации содержания входной информации;
– выполнять функции языково-категориальной надстройки баз знаний в конкретных предметных областях.
     Определение 4.2. ЯКМ – это замкнутая, развивающаяся, формализованная информационная (лексикографическая) система, которая обеспечивает семантическое толкование элементарных единиц естественного языка и их устоявшихся конструкций различной сложности в процессе анализа и интеграции входной информации, представленной естественным языком.
     Как следует из определения, ЯКМ является смешанной онтологией, лингвистическая часть которой названа языково-онтологической картиной мира (ЯОКМ). Последняя является центральным компонентом ЯОИС. В ЯОКМ включены только общенаучные, общеупотребительные (или энциклопедические) понятия, т.е. основные лексические единицы Толкового словаря. При этом множества языковых единиц частей речи структурируются отдельно, соответственно со своими совокупностями базовых отношений (для полнозначных частей речи).
     Одной из важнейших функций ЯОКМ считается эффективное формализованное представление синтаксических единиц естественного языка. В [63] очерчено, что важной представляется задача разработки эффективных методов формализации, которые могут быть применены при решении основной проблемы языковедения – проблемы значения единиц и конструкций языка. Причём, формализмы должны быть такими, чтобы результаты представлялись в унифицированной, операционально ориентированной форме, доступной и удобной для применения в компьютерных технологиях.
     Место онтологии ЯКМ находится ниже метаонтологии категорий верхнего уровня, но выше онтологий прикладных областей. В сущности, она является лингвистической и категориальной метаонтологией предметных знаний наряду с другими метаонтологиями общего характера. Отсюда одно из назначений ЯОКМ – служить цепью, которая связывает лингвосемантические отношения между разными предметными областями. Другим важным назначением является обеспечение формального требования множественного наследования в онтологической иерархии категория (супертип) ? концепт (тип) ? примитив.
     Во многих работах по вопросам развития знание-ориентированных информационных систем подчёркивается важное значение построения иерархических структур категорий верхнего уровня. Так, в ?125? отмечено, что построение системы категорий есть необходимый этап разработки интеллектуальных систем, основанных на знаниях, а также систем, которые обеспечивают автоматизацию понимания смысла текста. В ?3? высказано несколько другую мысль: “Существенным является построение языково-онтологической картины мира (ЯОКМ) как основы информационного взаимодействия систем разной материальной природы”. Основательная научная разработка языковой картины мира и иерархии сем изложена в работе ?27?, в которой модель семантических отношений в лексике приобретает схему смыслового каркаса, на котором базируется глобальная “сферическая” сеть разнотипных семантических отношений. Смысловой каркас построен по двум параметрам: гносеологическом – категории познания (бытие, пространство, время, движение, отдельное, качество, количество, отношение) и онтологическом – сферы бытия (человек, природа, общество). Аналогичный пример развития лексико-семантических отношений первой и второй ступени приведена в работе ?33?.
     Схемы структуризации ЯОКМ, приведенные в этих работах и ряде других, во-первых – страдают определенной субъективностью подхода к систематизации, структуризации и классификации понятий; во-вторых – неполнотой лексического континуума и отношений между представленными лексическими единицами (понимается, прежде всего, не их теоретический задел, а компьютерная обработка, а точнее – программное моделирование); в-третьих – они отделены от современных интеллектуальных информационных технологий и их применений.
     Относительно нашего исследования:
* за основу взята иерархическая структура категорий верхнего уровня, синтезированная на логико-философских началах и описанная в главе 1;
* полнота лексического континуума обеспечивается воспроизведением в соответствующих таблицах лексикографической базы данных полного множества лексем Толкового словаря;
* исследование как такое ориентировано на разработку аппаратных средств поддержки (грамматического процессора) на базе современных технологий.
     Рассмотрим соотнесенность понятий онтологии ПдО и базы знаний ПдО. Можно привести цитату из [86], содержание которой поддерживается авторами. “Различие между прикладной онтологией и базой знаний связано с целью онтологии, которая является специфической базой знаний, описывающей факты, предполагаемые сообществом пользователей быть всегда истинными, в силу согласованного значения используемого словаря. Вместо этого, общая база знаний может также описывать факты и утверждения, связанные со специфической конъюнктурой или специфическим эпистемологическим состоянием. Поэтому, в пределах общей базы знаний мы можем отличить два компонента: онтологию (содержащую состояние-независимую информацию) и “ядро” базы знаний (содержащее состояние-зависимую информацию)”.
     Кроме того, следует уточнить интервал истинности состояние-независимой информации (или по-другому – концептуальных знаний). Он должен быть как минимум равным “жизненному” циклу разрабатываемой ЗОИС. Иначе это будет означать несоответствие действительности концептуальных знаний или нарушении целостности концептуальной разметке знаний, что должно привести к реинжинирингу системы.
     ЯОКМ является основным исходным и подготовительным материалом для компьютерной обработки ЕЯТ и одним из главных блоков в языково-онтологической информационной системе. Его основной функцией является построение формализованного описания отображения входного ЕЯТ с воспроизведением полной акторной составляющей семантики, присутствующей в нём. 
     Такое отображение можно записать в виде:
                                                              (4.4)
где , где – формализованное описание i-ой компоненты объектной составляющей семантики слов полнозначных частей речи, которые входят в исходный ЕЯТ,  – количество указанных слов;  – формализованное описание акторной составляющей семантики исходного ЕЯТ.
     Программно-аппаратную часть ЯОИС названо семантическим процессором. Задачи пользователя в полном объёме решаются при взаимодействии ЛП, СП и процессора интерпретации базы (мета) знаний и базы знаний из конкретной предметной области (построение последней представляет отдельную задачу).
     Представление о взаимосвязи между базой знаний и онтологией предметной области, высказываясь языком метафоры, можно представить как “цветущеё дерево с полным набором листьев и ветвей в летний период” для базы знаний, и “тем же самым деревом ранней весной и после его обработки садовником” – для онтологии.
     Обязательным условием реализации ЯОКМ является формализованная компьютерная интерпретация (как программными, так и аппаратными средствами). Такую онтологию иногда называют наивной картиной мира. Знание об окружающей среде в ней исчерпываются системой понятий, сформулированных на некотором языке на уровне здравого смысла, связанных между собой максимально полной системой отношений, которые отображают окружающий мир со всем множеством его объектов и явлений, т. е. представляют собой лингвистическую проекцию бытия человека, в котором зафиксирован опыт взаимодействия с окружающей действительностью. ЯОКМ – составная часть прагматической модели языкового сознания, что является ключевым компонентом современных интеллектуальных ИС с естественно-языковым представлением, обработкой и актуализацией знаний.
     Определение 4.3. ЯОКМ – это открытая, эксплицитно заданная на лексико-смысловом континууме лексикографическая система, в которой совокупность понятий верхнего уровня формально обоснована и упорядочена в сложную иерархическую структуру по основным типам лексико-семантических отношений.
     ЯОКМ как формальное описание общепринятой лексики представляется стандартной схемой
O = ?X, R, F?,                                                              (4.5)
где X – конечное множество понятий, характеристик, ролей и атрибутов (или контент-слов), выраженных лексическими средствами ЕЯ, прежде всего такими полнозначными частями речи, как существительное, глагол, прилагательное и наречие. В логике они представляются, как правило, одноместными предикатами Р(х);
     R – полная система отношений, такая как Р(х,у) или Р(х,в,z) (по утверждению Пирса, отношение с валентностями четыре и больше можно представить композицией двух- и трёхвалентных отношений);
     F – множество функций интерпретации, заданных на Х и/или P.
     Графически ЯОКМ представляет некоторый гиперграф, что является результатом склеивания ациклических ориентированных графов лексических единиц для каждой полнозначной части речи. Служебные части речи учитываются на этапе снятия многозначности и логического представления исходного ЕЯТ.
Развитие абстрактной модели ЯОКМ
     Уточним содержание понятия иерархического структурирования в онтологии ЯОКМ относительно лексического континуума естественного языка. Смысл любого высказывания, как таковой, возникает, когда текстовые компоненты вступают в определенные действующие отношения (объект ? действие). Сфера действия определяется количеством объектов, которые она охватывает.
     Такое рассмотрение очень упрощенно описывает структуру отображения схемы (4.4) и больше ориентировано на описание объектовой составляющей семантики. Очевидно, что для полного отображения построенных лингвистическим процессором синтаксических структур входного ЕЯТ, описания акторной составляющей текста, необходимо учитывать, прежде всего, базовые полнозначные части речи. В обобщенной схеме взаимодействия структурных компонентов ЯОКМ за основу примем предположение относительно представления в ней и семантической интерпретации соответствующих частей речи:
     * объекты – как существительные;
     * действия – как глагола;
     * атрибуты объектов – как прилагательные;
     * атрибуты действий – как наречия.
     Такая интерпретация хорошо согласовывается с известной концепцией WordNet, рассмотренной выше. Иерархическая структура ЯОКМ должна представлять собой некоторый гиперграф, как композицию четырёх ациклических ориентированных графов иерархических структур существительного, глагола, прилагательного и наречия. Каждый из этих графов строится в соответствии со своими концептуальными и лингвистическими отношениями, присущими каждой из указанных частей речи. Отображение семантических особенностей объединения существительного с предлогом учитывается в графе для существительного.
     Согласно приведенному выше описанию на рис. 4.3 представлена абстрактная модель языково-онтологической картины мира. На нём приняты следующие сокращения:
* М, П, С, Г, Н, Ч – полнозначные части речи, соответственно местоимение, прилагательное, существительное, глагол, наречие и числительное;
*  – элементы синтаксических структур, соответственно атрибут объекта, объект, действие и атрибут действия;
*  – элементы семантических структур первой ступени, соответственно концептуальные графы атрибута объекта, объекта, действия и атрибута действия;
* М*, Ч* – определенным образом упорядоченные морфологические таблицы для частей речи, соответственно местоимения и числительного, в исходном ЕЯТ;
* ЕЯТ* – исходный естественно-языковый текст после интерпретации модулем обработки семантики первой ступени.

Рис. 4.3. Абстрактная модель ЯОКМ
     Относительно представления абстрактной модели ещё раз укажем, что модель морфологических структур ЕЯ является упрощенной и не раскрывает всех полнозначных частей речи и взаимоотношений между ними. Такое упрощение является справедливым, так как в этой модели сделан акцент именно на онтологическую составляющую.
     Как было определено, онтологический граф не включает понятия нижнего уровня. Но формализованного критерия определения границы нижнего уровня не существует, и в каждом случае полностью зависит от интуиции и профессиональных взглядов исследователя.
     Одним из этапов расширения абстрактной модели является включение в ЛБД дополнительных таблиц, которые включают как полнозначные части речи (причастие и деепричастие), так и служебные части (предлог, союз и частица) и устойчивые словосочетания. При этом целесообразно таблицу деепричастий реализовать как подтаблицу в таблице “Глагол”, выделить безличную форму глагола в отдельную подтаблицу, таблицу “Существительное” разбить на три подтаблицы “Существительные_общие”, “Существительные _собственные имена” и “Существительные _отглагольные”, а также принять во внимание ряд других грамматических особенностей украинского (или русского) языка.
     Следующим этапом являются расширения синтаксических структур естественного языка. Добавляются два блока, связанных с таблицами “Причастие” и “Деепричастие”, модели морфологических структур: “Атрибут атрибута объекта” – для причастия и “Атрибут атрибута действия” – для деепричастия. Кроме того, таблица “Предлог” связывается с синтаксической структурой “Объект”, а таблицы “Союз” и “Частица” включаются у фразовые синтаксические структуры для формирования более сложных конструкций.
     Модель семантических структур первого уровня (или объектной семантики) сформированная из тех же самых КГ для объекта, действия, атрибута объекта и атрибута действия. При этом в обобщенном виде выполняется их структурирование.
     Для КГ объекта – существительные, которые обозначают общие понятия ? существительные, которые обозначают сущности с признаком действия ? существительные, которые обозначают обобщённые объекты ? существительные, которые обозначают конкретные объекты.
     Для КГ действия – глаголы, которые выражают семантические темы, структурируются на верхних уровнях графа; другие глаголы структурируются на нижних уровнях графа.
     КГ атрибута объекта разбивается на три подграфа, соответственно качественных, относительных и притяжательных атрибутов объекта.
     КГ атрибута действия своими ветвями связывается с соответствующими группами семантических тем глаголов.
     Формальное отображение представляет семантическую модель второго уровня (или акторной семантики) и включает подмножества логики первого порядка концептуальных графов, исчисления предикатов и языка представления знаний (KIF), спроектированных на исходный ЕЯТ.
     Приведем в виде Таблицы 4.2 надлежащим образом структурированные формальные основы применения правил, принципов, абстракций и отношений при развитии метаонтологии категорий верхнего уровня и ЯОКМ (отдельно для уровней концептов и примитивов), обобщённых из работ [5, 21, 22, 23, 33, Ошибка! Источник ссылки не найден., 88, 126, 127], и некоторые правила-рекомендации, которые необходимо учитывать при классификации концептов.
     Семантические отношения нижнего уровня (для некоторого предложения на ЕЯ) определяются на основе работы лингвистического анализатора и зависят от архива лингвистических знаний: словари словоформ для морфологии, грамматические правила для синтаксиса и концептуальные паттерны (или множества слотов фреймовых структур) для семантики. Они могут быть получены из лингвистических категорий и являются основными стандартными блоками для определения более сложных отношений в концептуальных графах, базах данных или экспертных системах.
     Приведём некоторые правила-рекомендации, которых (в том числе) необходимо придерживаться при построении онтологии прикладной области [Ошибка! Источник ссылки не найден.].
1. Процедура перехода между соседними уровнями должна быть соизмеримой. Это означает, что объединение объёмов или соединение значений концептов нижнего уровня должно составлять концепт верхнего уровня.
2. Процедура перехода должна выполняться по одной основе или характеристика, которая выбирается как основа деления, в ходе деления не должна подменяться другой характеристикой.
3. Компоненты делимого концепта должны исключать друг друга. Это означает, что их объёмы не должны содержать общих элементов или их значения не должны иметь общих частей.
4. Процедура перехода должна быть последовательной. Это означает, что от родового понятия необходимо переходить к видовым понятиям одного и того же уровня, а от целого к частям, частям частей и т. д.
     Одним из возможных вариантов перевода ЕЯ предложений в формальные структуры может быть перевод в концептуальные графы, рассмотренные в 3.4.3, так как они с самого начала разрабатывались для этих целей, обеспечивают читабельность, наглядный итерационный процесс выявления ошибок перевода и в то же время является одним из подмножеств логики первого порядка. Кроме того, у концептуальных графов заложена возможность формирования процедуры вложенности, которая отвечает цепочке синтаксических единиц “фраза ? предложение ? абзац ? параграф ? раздел ? текст ? том” или фрагментам действительности “элементарная ситуация ? ситуация ? сценарий”.
Таблица.4.2. Формальные основы структурирования онтологииI. Метаонтология категорий верхнего уровняВиды абстракцийКлассификация, обобщение, агрегация и ассоциацияПринципы классификацииФундаментальные принципы дихотомии Аристотеля, трихотомии Пирса и решёток Лейбница, естественная классификацияТипы классификационного деленияТаксономические, мереологические, пространственные и временныеНаследование признаков: МножественноеII. Языково-онтологическая картина мира
А. Уровень концептовКонцептно-ролевые
отношенияПроизводят два репрезентативные примитива, соответственно названные присоединением и кореферентной связью. На естественный язык переводятся разными грамматическими формами глаголов иметь и бытьПредикативные 
отношенияОбобщённо-обобщённого характера, обобщенно-отдельного характера и отдельно-отдельного характераСемантические 
отношенияКлассификационные – род-вид, целое-часть, класс-элемент, вышестоящий-нижестоящий, класс-подкласс;
признаковые – объект-атрибут,  объект-действия;
количественные - иметь меруЛингвистические отношенияГипонимия и меронимияБ. Уровень примитивовПредикативные 
отношенияОбобщенно-единичного характера, отдельно-единичного характера и единично-единичного характераСемантически-ролевые 
отношенияКлассификационные – иметь имя, быть эталоном;
 признаковые – иметь значение атрибута, иметь значение способа действия; количественные – иметь значение меры;
 сравнения – равно, сравнимо, больше, больше или равно, меньше, меньше или равно, несравнимое;
 принадлежности – простой принадлежности;
 простые временные – быть одновременно, быть раньше, быть позже, совпасть во времени, пересекаться во времени, быть всередине во времени, начинаться одновременно, заканчиваться во времени;
 простые пространственные – совпадать в пространстве, быть слева, быть справа, быть впереди, быть сзади, быть сверху, быть снизу, быть наискосок, пересекаться в пространстве, торкаться, размещаться на, размещаться в;
 каузальные – быть целью, быть мотивом, причина-следствие;
 инструментальные – служить для, быть средством для, оказывать содействие, быть инструментом, быть вспомогательным средством;
 информационные – быть отправителем, быть получателем, быть источником информации;
 порядковые – быть следующим, быть текущим, быть ближайшим;
 модальные – возможности, действительного воплощения, необходимости; модификационные;
 квантификационные – всеобщности, существования, уникальности, единичности, возможности, необходимости;
 корреляционныеЛингвистические отношенияСинонимия, антонимия4.3. Системная интеграция лингвистических и предметных онтологий
     Разработка и коммерческое использование баз знаний и соответствующего инструментария во многих прикладных областях (Knowledge based engineering systems) на основе онтолого-управляемых информационных систем во многих научно-исследовательских центрах и корпорациях привела к росту теоретических разработок формализованных методологий проектирования онтологических структур. При этом сущность указанных методологий сводилась к формальному обоснованию структурирования иерархического дерева онтологии (формализованного построения наборов концептов и связывающих их концептуальных отношений или категоризации) и разработке формальных языков представления знаний, которые описывают аксиоматизацию концептов предметной области. Следующим шагом развития теории баз знаний являлась необходимость теоретически обоснованного объединения (или системной интеграции) уже разработанных как общедоступных онтологий, так и коммерческих баз знаний для разнообразных прикладных задач, проблем, целых предметных областей и трансдисциплинарных знаний общего характера.
     В общем виде процесс, обеспечивающий системную интеграцию множества онтологий, можно описать следующей формулой
где           – знак концептуального объединения. Смысл этого знака состоит в системной интеграции исходных онтологических графов (ОГ) с учётом областей определений  и их взаимосвязи (взаимодействия).
     Обобщенная архитектура знание-ориентированной системы, эффективно реализующей процедуры обработки предметных знаний, развития БЗ и системной интеграции, представлена на рис. 4.4.

Рис. 4.4. Архитектура развивающихся знание-ориентированных систем
     Реализация технологий представления и обработки знаний и процесса системной интеграции знаний предполагает учёт различных формально-методологических требований, критериев и оценок. Приведём основные из них.
1. Сущность методов онтологического исследования как раздела системного анализа предполагает:
а) построение статических и динамических моделей;
б) исследование структуры ПдО и взаимосвязи компонент знаний;
в) исследование поведения системы, описывающей заданную ПдО – разработка алгоритмов процедур композиции знаний и диаграмм состояний.
2. Влияние предметной области на вид онтологии.
3. Правила формирования достоверных утверждений и выводов, описывающих систему и её поведение.
4. Категориальный уровень онтологии ПдО и соответствующая ему система отношений.
5. Характеристики онтографа (средний коэффициент ветвления i-ой вершины, количество уровней ветвления, количество типов отношений, в том числе по подтипам).
     Познание идёт от изучения вещей к изучению процессов (в том числе взаимодействия компонент, включая уровень “субъект–объект”), от устойчиво функционирующей системы – к системе изменяющейся и развивающейся, а результатом, следствием процесса развития является возникновение нового качества [15].
4.3.1. Формализованные аспекты интеграции и её оценка
     Объём знаний W в предметных областях можно оценить через характеристики (параметры) их формально-онтологических представлений. В частности, при представлении онтологическим графом (без учёта типов отношений и сложности функций интерпретации) величина W может характеризоваться числом вершин ОГ. В случае простой древовидной структуры это число может быть выражено формулой
   
где  – онтограф i-ой предметной области, ;  – степень вершины, равная числу исходящих из неё рёбер,  – количество уровней ОГ,  – номер вершины на соответствующем (-ом) уровне ОГ.
     При равномерной плотности распределения ОГ, т.е. при = (4.7) сводится к известной формуле суммы геометрической прогрессии
   
     Учёт типов отношений и сложность функций интерпретации приводит к ОГ со взвешенными вершинами и ребрами. Выражение (4.8) при этом преобразуется в вид
   
где  и  – значения весовых функций соответствующих отношений и функций интерпретации, приписанные вершинам () и ребрам () ОГ. Выражение (4.9) даёт полную оценку сложности ОГ, а отношение  характеризует среднюю плотность взвешенного ОГ.
     Рассмотренные оценки позволяют сравнивать различные варианты представления знаний о предметных областях, а также отслеживать процесс эволюции научных теорий.
     Процесс развития знаний в любой ПдО связан с её анализом, концептуализацией и построением формальной теории. При этом формализация в общем случае относится к четырём основным видам представления информации
   
т.е. к вербальному (), аналитическому (), табличному () и графическому (). Между ними существует взаимно-однозначное соответствие, не всегда на практике реализуемое строго и полностью. Поэтому все они находят своё, вполне определённое место при описании научной теории. Во многих случаях корректным оказывается их ограничение до двух: вербальный и аналитический.
     Как правило, процесс развития теорий сопровождается перераспределением объёма информации о предметной области между вербальной и формальной компонентами, т.е. между естественно-языковым описанием предмета исследования и формально-аналитическим (формульным , табличным , графическим  представлением существа теории). Очевидно, что формализованное представление является более компактным, а главное, – более строгим и пригодным для компьютерной обработки.
4.3.2. Практическая интеграция онтологий
     Накопившийся опыт практического использования SUMO и других онтологий (в первую очередь WordNet и FrameNet) показал необходимость в объединении двух и более онтологий (построении взаимных отображений концептов) в единую концептуальную структуру. Два вида онтологий (лингвистическая и концептуальная) отражают две стороны концептуализации реального мира. Если у WordNet концептуализация отображается в терминах естественного языка, то у SUMO концепты организованы в логическую структуру. При этом объединение предполагает построение отображения между соответствующими узлами различных онтологий.
     Отображение SUMO ? WordNet. Рабочая группа SUO WG разработала такое отображение. Оно сопоставляет каждому синсету в базе данных WordNet путём теггирования соответствующего концепта в SUMO. При этом вид отношения между синсетами WordNet и концептами SUMO могут быть: синсет эквивалентен концепту; синсет является более высшим классом, чем концепт; и синсет является элементом концепта. Разработанные файлы отображения позволяют соотнести слова естественного языка в термины SUMO, используя синсеты WordNet как промежуточный уровень ?128?.
     Приведём пример формализованной записи для первого вида отношения между синсетами WordNet и концептами SUMO:
00008864 03 n 03 plant 0 flora 0 plant_life 0 027
@ . . . | a living organism lacking the power of 
locomotion &%Plant=
     Префикс ‘&%’ указывает на то, что термин взят из онтологии SUMO, а суффикс ‘=’ указывает, что отношение отображения – синонимия.
     Мотивацией для построения таких отображений может быть следующее.
     Отображения могут функционировать как индексы естественного языка к концептам в онтологии, как мост между этими структурированными концептами и нетекстовой лингвистической структурой. Разработчики создали специальный инструмент и встроили его в SUMO-браузер, который позволяет пользователю задавать термины естественного языка и видеть на экране компьютера соответствующие концепты онтологии SUMO с соответствующей формальной аксиоматизацией. Это позволит значительно упростить процесс инжиниринга знаний и моделирования данных. Кроме того, отображения могут служить важным источником знаний для применений NLP, в частности при реферировании текстов и семантическому поиску документов в сети. И ещё, с помощью соответствующего инструментария можно проверить на полноту степень завершённости проектируемой онтологии.
     Отображение SUMO ? FrameNet. Онтологии SUMO и FrameNet являются относительно сформировавшимися средствами, но представляется целесообразным объединить их сильные стороны для существенного упрощения автоматической обработки текстов NLP. В частности, NLP-применения, использующие FrameNet, требуют знаний о возможных заполнителях элементов фрейма (FEs). Например, семантическому фреймовому анализатору необходимо знать, является ли определённый фрагмент текста (или именованная сущность) строгим заполнителем для FE, т.е. ему необходимо проверить, является ли тип заполнителя FE совместимым с типом именованной сущности. Поэтому у FrameNet представлено около 40 семантических типов (FТ) как ограничения на заполнители FEs и имеющие соответствия с SUMO классами как FТs ?129?. Фрагмент связывания SUMO и FrameNet представлен на рис. 4.5.
Рис. 4.5. Фрагмент связывания SUMO и FrameNet.
     Следует отметить, что существуют и другие проекты связывания лексикон-онтология [130]. Но рассмотренное связывание SUMO и FrameNet имеет ряд преимуществ. Дело в том, что FrameNet, в отличие от WordNet, моделирует семантические и синтаксические валентности, включая высококачественные аннотации. Фреймовые семантики естественно представляют кросс-лингвистические абстракции и нормализацию парафраз. Что касается SUMO, то она значительно шире DOLCE, а в отличие от Cyc является открытой для доступа.
     При интеграции знаний следует учитывать прикладные аспекты. Принципиально различают области:
а) взаимодействия с пользователем – когнитивизация представления, поиск информации, создание начальной онтологии и начальной системы знаний;
б) развития системы знаний на основе имеющихся, генерация новых знаний.
4.4. Методология разработки онтологии ПдО
4.4.1. Анализ известных методик разработки онтологий
Общий подход к проектированию
Известна методология структурного анализа и проектирования (SADT) сложных систем в произвольной предметной области [131]. Эта методология породила семейство методик (и соответствующих стандартов) IDEF (Integrated DEFinition), ориентированных на разработку моделей ПдО и акцентирующих внимание на каком-то конкретном аспекте проектирования [132, 133]. В частности:
* методика IDEF0 рекомендована для содержательного анализа и функционального проектирования сложных систем управления, в том числе и программного обеспечения. Однако в последнем случае трудно определить её преимущества по сравнению с методологией ООП. Описание объектов и процессов в методике выполняется в виде иерархической совокупности диаграмм с лаконичным описанием функций. Блоки на диаграммах выражают функции, поэтому их названия – глаголы или отглагольные существительные;
* методика IDEF1х предназначена для информационного моделирования, основана на концепции “сущность-связь”. Обычно отправным пунктом для разработки информационной модели является IDEF0-модель;
* методика IDEF3 описывает поведенческие аспекты конкретных приложений, рассматривает последовательность выполнения и причинно-следственные связи между ситуациями и событиями для структурного представления знаний о ПдО. Если IDEF0 связана с функциональными аспектами и отвечает на вопросы “Что делает система?”, то в IDEF3 детализируются IDEF0-функции. Эта модель отвечает на вопросы “Как система это делает?”;
* методика IDEF5 предназначена для онтологического анализа ПдО, анализа основных терминов и понятий, используемых для описания объектов и процессов, границ использования, а также взаимосвязей между ними. Служит для эффективного исследования и документирования: словаря терминов, используемых при описании характеристик объектов и процессов, имеющих отношение к рассматриваемой ПдО, точных и однозначных определений всех терминов и классификации логических взаимосвязей между ними.
     Для каждой из методик семейства IDEF разработаны этапы и стадии построения модели ПдО, языки и диаграммы представления результатов. Анализ получаемых в результате применения методик IDEF моделей ПдО и их описаний с точки зрения формализации и компьютерной обработки показал, что, по сути, они (функциональные модели и описания) представляют собой содержательное техническое задание на проектирование ОнС, включающей онтологию объектов (сущностей), онтологию процессов и онтологию задач. Описание же самой ОнС имеет несколько иные цели. Оно ориентировано на компьютерное представление с помощью стандартизованных языков предметных знаний с целью широкого использования сообществом пользователей.
     Итак: 1) методики IDEF и системно-онтологический подход используют одни и те же множества сущностей ПдО и ПрП, акцентируя внимание на различных совокупностях характеристик и атрибутов; 2) конечные цели этих двух подходов отличаются: для IDEF – функционально-блочная модель, а для СОП – онтолого-содержательная модель.
     Выполненный выше анализ позволяет утверждать, что методики IDEF и системно-онтологический подход решают разные задачи, но со значительным “перекрытием” некоторых функций. Весьма очевидно это проявляется для пары “онтология процессов ? поведенческая модель ПдО”. На самом деле в ООП (как и в онтологии задач) основными понятийными единицами являются классы объектов (задач) и методы их описания (решения).
     Очевидно, этапы проектирования онтологических систем исходят из принятых в методологии SADT фаз проектирования сложных систем: 1) анализ – определение того, что система будет делать; 2) проектирование – определение подсистем и их взаимодействие; 3) реализация – разработка подсистем по отдельности, объединение  – соединение подсистем в единое целое; 4) тестирование – проверка работы системы; 5) установка – введение системы в действие; 6) функционирование – использование системы.
Предварительный анализ предметной области
     Во все методологии включен этап предварительного анализа ПдО или составления содержательного ТЗ на проектирование [3, 5, 131, 132, 133, 134, 135, 136]. Этот этап (как и процесс проектирования базы знаний ПдО в целом) носит сложный аналитический характер и заключается в многократном абстрагировании, в результате которого из всего многообразия сторон и свойств сущностей предметной области выделяются наиболее существенные, релевантные конкретным задачам. Знание предметной области, понимание сути происходящих в ней процессов, законов, правил и ограничений, управляющих её развитием, является необходимым условием успешного решения задач, стоящих перед исследователем. Более того, наличие таких знаний является необходимым условием постановки, формулировки этих задач, без чего невозможно само решение [37]. Онтологические системы призваны сделать знания коллективным достоянием широкого круга лиц, дать мощный инструмент для фиксации, приобретения и обработки знаний, проверки их на непротиворечивость, полноту и т.п. Кроме того, составляется систематизированное представление знаний о ПдО, выявляются источники формирования элементов множеств и процедур, задач, выполняемых в анализируемой ПдО. Составляется и документируется словарь терминов ПдО.
     Этап предварительного анализа ПдО включает:
* обоснованный выбор точного (и достаточного) фрагмента ПрП, относительно которого будут ставиться и решаться задачи пользователя;
* выбор методов и процедур системно-онтологического анализа, которыми, в частности, могут быть абстрагирование и конкретизация, композиция и декомпозиция, структурирование, кластеризация и классификация, тестирование и верификация;
* составление детального словаря терминов и его разбиение на подмножества терминов-объектов, терминов-процессов и терминов, именующих задачи и методы.
     Если предметная область (и проблемное пространство) представляет сложную систему, то следует рассмотреть вопрос о предварительном этапе проектирования на основе методик IDEF, которые дополняют описанные выше шаги проектирования. Тем более что известные инструментальные средства анализа ПдО и построения баз знаний (например, KADS-системы, российская SIMER+MIR) по ряду причин не могут быть использованы.
     Как правило, методика сводится к алгоритму, который носит итеративный характер. Для процесса разработки необходимо предусмотреть ряд “контрольных точек” для проверки полученных результатов на соответствие выбранным критериям. Указанные критерии должны соотноситься с заданными критериями на проектирование базы знаний ПдО, так как создание последней является целью для разработчиков. Оптимальный результат, как правило, зависит от степени проработки предполагаемых приложений и вариантов использования онтологии.
4.4.2.Онтология объектов ПдО
Определение 4.4. Под онтологией объектов предметной области понимается четвёрка [2]:
                                                        (4.11)
где – ,  – конечное множество концептов (понятий-объектов) заданной ПдО;
   –  – конечное множество семантически значимых отношений между понятиями-объектами ПдО. Они определяют тип взаимосвязи между понятиями. В общем случае, отношения делят на общезначимые (из которых выделяют, как правило, отношения частичного порядка) и конкретные отношения заданной ПдО;
   –  – конечное множество функций интерпретации, заданных на понятиях-объектах и/или отношениях;
   –  – конечное множество аксиом, которые используются для записи всегда истинных высказываний (определений и ограничений). 
     Компьютерная онтология является (формальным) выражением концептуальных знаний о предметной области и по своей значимости сопоставима с базой знаний интеллектуальной информационной системы, а её построение является специфической формой человеческого творчества. Творческий процесс можно представить совокупностью операций-процедур с суждениями, утверждениями, понятиями и отношениями между ними. А последние являются фундаментом, основой для построения составной части научной теории – онтологической базы знаний в заданной предметной области. При этом такие знания описываются в декларативной форме.
     Онтология определяет общеупотребительные, семантически значимые “понятийные единицы знаний”, которыми оперируют исследователи и разработчики знание-ориентированных информационных систем. Она отделяет “статические” и “динамические” компоненты знаний ПдО от операциональных знаний. В отличие от знаний, закодированных в алгоритмах, онтология обеспечивает их унифицированное и многократное использование разными исследовательскими группами, на разных компьютерных платформах при решении разных задач.
Построение компонент онтологии
     Напомним некоторые известные определения, непосредственно относящиеся к построению множеств концептуальной модели ПдО или её онтологии [Ошибка! Источник ссылки не найден., 137].
     Понятие есть целостная совокупность суждений, в которых что-либо утверждается об отличительных признаках исследуемой сущности, ядром которой являются суждения (или утверждения) о наиболее общих и в то же время существенных признаках этой сущности.
     Каждое понятие характеризуется объёмом и содержанием. Объём и содержание понятия – две взаимосвязанные стороны понятия. Объём – класс обобщённых в понятии предметов, содержание – совокупность (обычно существенных) признаков, по которым произведено обобщение и выделение предметов в данном понятии. Объём понятия является определяющим при формировании иерархической структуры соответствующего онтографа, а содержание – при аксиоматизации его (ОГ) вершин.
     Все понятия (или концепты) делятся на ряд классов (по семантической зависимости).
1. В зависимости от отображения вида или рода предметов – на видовые и родовые понятия.
2. В зависимости от отображения части или целого предметов – на понятия-части и понятия-целые.
3. В зависимости от количества отображаемых предметов – на единичные и общие понятия.
4. В зависимости от отображения предмета или свойства, абстрагированного от предмета, – на конкретные понятия и абстрактные понятия.
     Онтология ПдО – это концептуальная модель реального мира и её понятия должны отражать эту реальность.
     Построение множества  считается наиболее важным моментом при разработке онтологии ПдО. Оно должно быть обязательно не пустым. Соотношения между Card X, Card R Card F характеризуют онтологию по функциональному признаку.
     Для хорошо проработанных предметных областей за основу множества элементов  может быть взято содержимое подходящих толковых словарей. В противном случае следует составить полный список терминов, в котором указать (причём пересечение объёмов и содержаний понятий в таком предварительном списке не существенно):
* чем является каждый термин – понятием-классом предметов или конкретным понятием;
* указать для каждого термина возможные существенные отношения с другими терминами из списка;
* описать возможные существенные свойства понятий.
     Известно, что в любой предметной области существуют термины-синонимы. Для них в онтологии отводится только одно понятие, в аксиомах которого может быть указан синонимический ряд терминов. Другими словами, синонимы одного и того же понятия не представляют различные классы.
     Далее следует уточнить и определить окончательный список классов-понятий, имена которых будут входить в разрабатываемую онтологию и являться вершинами онтографа. Также следует принять единые правила присваивания имён понятиям и их свойствам.
     Затем, возможно, следует повторить некоторые фрагменты процесса анализа ПдО (с привязкой к составленному списку понятий), выполненные на предварительном этапе. Отметим, что в число указанных выше “контрольных точек” (точек входа итерации) должно быть включено завершение разработки любого компонента онтологии.
     В результате должен быть получен полный список существенных для заданной ПдО (и предполагаемых приложений) понятий и их машинно-интерпретируемые формулировки.
     Построение множества  также основано на результатах предварительного этапа анализа ПдО. По сути, требуется установить для каждого элемента  семантическое отношение  с элементом  :  . Другими словами, необходимо построить множество рёбер, связывающих узлы направленного онтографа. В качестве узлов онтографа выступает множество понятий ПдО. Вершиной (или вершинами) онтографа является родовое понятие, которое не имеет надкласса, а самый нижний уровень представляют конкретные понятия (примитивы), т.е. не имеющие видовых понятий в заданной ПдО.
     На практике множество  на начальном этапе представляют некоторым обобщённым отношением “выше – ниже”. Известно несколько подходов для разработки иерархии классов: процесс нисходящей разработки, процесс восходящей разработки и комбинированный процесс разработки. Последний наиболее часто используется разработчиками, так как он является более естественным, сначала оперирует понятиями среднего уровня, к которым наиболее часто обращаются разработчики. Затем эти понятия обобщаются и ограничиваются.
     В заключение данного подэтапа следует соотнести разработанные классы и их иерархии с результатами предварительного анализа ПдО. В частности, уточняются зависимости для конкретных пар . В процессе соотнесения (и построения иерархии) следует учитывать, что [100]:
- прямые подклассы в иерархии должны располагаться на одном уровне обобщения;
- класс может быть подклассом нескольких классов, и тогда он может наследовать свойства от всех этих классов;
- если класс имеет только один прямой подкласс, то, возможно, при моделировании допущена ошибка или онтология неполная;
- если у данного класса есть более дюжины (иногда говорят о числе 7) подклассов, то, возможно, необходимы дополнительные промежуточные классы;
- в онтологии число классов соотносится с числом предполагаемых приложений.
     И следует помнить, что не существует единственно правильной иерархии классов.
     Описанное построение онтографа является специальным видом классификации понятий ПдО – онтологической классификацией.
     Построение множеств  и . В зависимости от функциональной ориентации проектируемой онтологии множества и  могут интерпретироваться по-разному [102, 134, 135, 136 и др.]:
     1)  – множество аксиом тождественно множеству функций интерпретаций. В этом случае устанавливаются существенные связи между разрабатываемыми компонентами онтологии и вариантами её использования. Основным назначением такой онтологии является однозначная интерпретация понятий, входящих в онтологию, сообществом пользователей;
     2)  – множество аксиом не тождественно множеству функций интерпретаций. В аксиомах задаются а) базовые функции (подмножество ) либо б) дополнительные отношения (не являющиеся элементами множества ) между понятиями, ограничения и условия, которые анализируются в машине вывода ОнС и используются в процессе решения задач;
     3)  – множество аксиом не тождественно множеству . Функции интерпретации рассматриваются как специальный вид отношений на множестве понятий . В этом случае устанавливаются существенные связи между уже разработанными компонентами онтологии и совокупностью задач предполагаемого приложения (приложений). Онтологии с таким представлением  используются в вопросно-ответных системах, в которых результатом является одно из значений двухэлементного множества  или имя предиката.
     В конечном счёте, независимо от того, какая из этих формулировок будет принята, эффективность разработанной онтологии будет определяться конечными результатами приложений.
     В определении концептуальной модели онтологии объектов множество аксиом A состоит из множества определений  и множества ограничений  для понятия . Определения записываются в виде тождественно истинных высказываний, которые могут быть взяты, в частности, из толковых словарей ПдО. В них могут быть указаны дополнительные взаимосвязи понятий  с понятиями . В множестве ограничений  могут быть заданы ограничения на интерпретацию соответствующих понятий .
     Кроме того, из полного списка отобранных в онтологию терминов не все представляют понятия. Существуют термины (например, ролевые), которые соответствуют свойствам определённых классов-понятий. Такие свойства следует привязать к описанию самого общего класса, обладающего ими. А подклассы этого класса будут наследовать указанное свойство (конечно, если между ними установлено некоторое отношение частичного порядка).
     Свойства понятий имеют определённые значения, такие как тип значений, мощность значений, разрешённые значения (для данного класса) и другие. Например, мощность значений можно описать: с единичной мощностью, мощностью без ограничений и мощностью с некоторым допустимым интервалом.
     На основе построенных множеств кортежа можно синтезировать концептуальную модель ПдО, например, с помощью известного инструментального средства Prot?g? и получить формальное описание разработанной онтологии на одном из языков описания онтологий, а также графическое представление онтографа.
4.4.3. Онтология процессов ПдО
     Синонимами онтологий объектов и процессов являются соответственно статическая и динамическая онтологии ПдО. В научно-технической литературе, когда говорят об онтологии ПдО, то подразумевается её статическая составляющая. Именно компоненты последней наиболее разработаны, как в литературе по философии, так и в конкретных описаниях ряда предметных областей. Под поведенческим описанием сущностей-процессов чаще всего понимают разработку определённых бизнес-процессов. Их результатом являются графические диаграммы и естественно-языковые описания процессов. Разработка же базы знаний не является прямой целью указанных методик. Поэтому методики разработки онтологии процессов практически неизвестны. Хотя следует отметить, что в некоторых известных онтологиях верхнего уровня (например, онтология Дж. Совы, SUMO и Mikrokosmos) сущность понятия “Процесс” рассмотрена достаточно детально [9, 92, 116, 138].
     На рис. 4.6 представлен синтезированный онтограф (на основе анализа указанных онтологий), который представляет схему начального развития понятия “Процесс”, причём только той её части, которая соответствует процессам в научно-технических предметных областях. Ветви онтографа “Социальный процесс”, “Материальный процесс” и им аналогичные не рассматриваются.
     Категория Процесс рассматривается как Действительность и Событийность, в отличие от категории Объект, характеризующийся как Действительность и Продолжительность [22]. В первую очередь Процесс рассматривается как зависимая от времени категория и затем подразделяется по видам изменений, наличием начальных и конечных точек и т.д. Далее Процесс подразделяется на непрерывный и дискретный. Первый из них характеризуется наличием эксплицитных начальной и конечной точек или как без явного указания этих точек. Второй вид процесса указывает, что изменения происходят дискретными шагами, названными событиями, которые чередуются с периодами покоя, названными состояниями.
    Приведенная схема начального развития онтологии процессов не отражает всех характеристик (оснований ветвлений в онтографе) категории “Процесс”, даже для той её части, что представлена на рис. 4.6.
    На рис. 4.7 представлена общая схема онтологии процесса ПдО, в которой категория “Процесс” представлена онтографом с p уровнями и np подпроцессами (ПП) на каждом уровне. Предпоследний (p-1) уровень представлен множествами действий, на которые разбивается каждый ПП предыдущего уровня. В свою очередь, каждое действие на последнем (p-ом) уровне разбивается на последовательность операций .
     Связи между подпроцессами для соседних уровней соответствуют отношениям “Целое-часть”, а внутри каждого уровня – некоторой смешанной формой организации соединений. На рис. 4.7 показан частный случай такой организации – параллельный. Дальнейшее развитие (конкретизация) онтологии процессов возможно, когда задана конкретная предметная область и соответствующее проблемное пространство, а в более узком смысле – конкретные признаки ветвлений (условия инициирования ПП, условия окончания ПП и ограничения) в онтографе.

Рис. 4.6. Начальное развитие онтологии процессов

Рис. 4.7. Общая схема онтологии процесса

4.4.4. Онтология задач проблемного пространства ПдО
     Из предметно-проблемных знаний в общем случае выделяют понятия и процессы ПдО, понятия и классы задач ПрП, а также методы решения последних. Сюда же относят и алгоритмы, реализующие соответствующие методы. Перечисленные типы знаний по темпоральному признаку делятся на статические и динамические, а по онтологической схеме на:
* онтология объектов ПдО (в некоторых публикациях используется термин “тезаурус”;
* онтология процессов ПдО;
* онтология пркладного приложения;
* онтология класса задач ПрП;
* онтология методов решения задач.
     Известны различные схемы конструирования (синтеза) онтологических структур из предметно-проблемных знаний. В [Гуревич] понятия объекты и процессы ПдО сгруппированы в тезаурус ПдО. В [   ] в онтологию ПдО включены только понятия-объекты, а в онтологию задач – все остальные онтологические структуры. В данной работе объекты и процессы ПдО (статистические знания) сгруппированы в отдельные онтологии, а в онтологию задач включены классы задач, методы их решения и соответствующие алгоритмы. При такой схеме группировки предметно-проблемных знаний, последние строго разделены на статические и динамические. Если изменяется класс решаемых задач, то онтологии объектов и процессов уже готовы к повторному использованию, перепроектируется только онтология задач [102, 103].
     В текстовых описаниях (спецификациях) целевых задач выделяются набор объектов и набор процессов (методов), необходимых и достаточных для выполнения конкретных целевых задач. Можно выделить некоторое унифицированное (пополняемое) множество базовых задач (типовых фрагментов задач), на основе которых с помощью определённых логических последовательностей конструировать более сложные задачи.
     Полем констрункта, описывающего схемы типов решаемых задач, является некоторая семантическая ось с противоположными сторонами “Выбор” и “Построение”, концепты которых описывают простую и сложную схемы решения задач. Под простой схемой (схема “Выбор”) понимается такая схема, в которой для решения задачи онтологической системе необходимо сделать выбор из совокупности известных схем решений. Когда выбор сделан, то известны метод, процесс и его состояния, т.е. решение задачи становится тривиальным. Противоположностью простой схемы является сложная схема (схема “Построение”), когда все составляющие процесса решения задачи неизвестны. На практике, чаще всего, встречаются некоторые промежуточные схемы решения задач. Например, схемы, в которых начальные и целевые состояния, совокупности методов задаются в явном виде. Общей стратегией решения сложных (непростых) задач является многоуровневая декомпозиция исходной задачи до того уровня, на котором полученные подзадачи являются простыми. При этом онтологические знания являются активной основой процесса декомпозиции.
     Онтологические знания, описывающие некоторое ПрП, можно разделить на следующие компонентные знания: типы входных и выходных данных, инструменты, операторы (человек или компьютерная программа) и операции (действия оператора или Решателя задач) [108].
     Для реализации подхода необходимо разработать унифицированный язык представления онтологических знаний и инструментальную среду как набор специализированных и универсальных базовых операций, управляющих процессом решения. Необходимо также разработать Решатель задач, который осуществляет выбор средств и методов формирования структуры задачи на основе базовых операций.
     Схема модели онтологии задач описывается тройкой
                                                            (4.12)
где  – обобщённая задача проблемного пространства, состоящая из р задач, которые, в свою очередь, состоят из  фрагментов каждая. Каждый фрагмент представлен процедурой, реализованной на множестве  операций каждая. Кроме того, задача
                                                         (4.13)
определяется множествами входных данных , требований (условий, ограничений) , контекста задачи  и выходными данными (или целью решения задачи) ;
 – множество методов решения задач. Определяется как отображение 
                                                         (4.14)
компоненты которого определены выше;
 – решатель задач.
     На рис. 4.8 представлена схема онтологии задач.
     Одно из преимуществ онтологического подхода, в частности, иерархического представления состоит в том, что сложная задача большой размерности разбивается на последовательно решаемые группы задач малой размерности. Онтология задач в качестве понятий содержит типы решаемых задач, а отношения этой онтологии, как правило, специфицируют декомпозицию задач на подзадачи.

Рис. 4.8. Схема онтологии задач
4.4.5. Алгоритм проектирования онтологий
     На рис. 4.9 представлена блок-схема алгоритма проектирования онтологии ПдО и онтологии задач. Онтология ПдО представлена онтологией объектов и онтологией процессов, для которых в блок-схеме предусмотрены отдельные ветви. Предполагается, что множество функций интерпретации в моделях онтологий тождественно множеству аксиом. На рисунке приняты следующие сокращения:
* ПрП – проблемное пространство;
* Т-О, Т-П – термины-объекты и термины-процессы; Т-З – списки задач, процедур и методов их решения;
*  – конечные множества понятий, отношений и функций интерпретации онтологии объектов;
*  – конечные множества понятий, отношений и функций интерпретации онтологии процессов;
*  – конечные множества понятий, отношений и функций интерпретации онтологии задач;
* ОГО, ОГП, ОГЗ – онтографы соответственно объектов, процессов и задач.

Рис. 4.9. Блок-схема алгоритма проектирования онтологии ПдО и онтологии задач
     Ниже описано содержание блоков алгоритма.
     1. Систематизируются методы и средства исследования предметных и проблемных знаний предметной области, а также выявляются источники их описания.
     2. Выполняется извлечение и систематизация целевых знаний и задач.
     3. Анализируется, какая онтология проектируется. Если в текущий момент времени проектируется онтология ПдО, то переход к п. 4, если онтология ПрП – то к п. 7. Кроме того, учитывается последовательность построения онтологий.
     4. Формирование списков Т-О, свойств Т-О, Т-П и свойств Т-П с учётом синонимии.
     5. Анализируется полнота сформированных в п. 4 списков. Если критерий полноты выполняется, то переход к проектированию онтологии ПдО. Иначе возврат к п. 2.
     6. Анализируется текущее состояние процесса проектирования. Если в текущий момент времени проектируется онтология объектов, то переход к п. 10, если онтология процессов – то к п. 18.
     7. В пунктах 7 и 8 выполняется формирование проблемного пространства. Составляются списки задач, процедур и методов их решения.
     8. Формируется информационное пространство для решателя задач.
     9. Анализируется полнота сформированных в п. 7 списков. Если критерий полноты выполняется, то переход к проектированию онтологии задач. Иначе возврат к п. 2.
    10. Выполняется построение множества . Составляются списки элементов  и присваиваются им имена.
    11. Анализируется исчерпание списка терминов, входящих в множество Т-О. Если список исчерпан, то выполняется переход к п. 12. Иначе осуществляется возврат к п. 10.
    12. Выполняется построение множества : формируются множества пар ,  в соответствии с отношением “выше-ниже”; анализируются и устанавливаются взаимосвязи ; строится предварительный онтограф для 
    13. Анализируется установление отношений для всех пар . Если отношения установлены для всех пар, то выполняется переход к п. 14. Иначе осуществляется возврат к п. 12.
    14. Выполняется построение множества : приписываются свойства для каждого  из списка свойств Т-О; формируются функции интерпретации  для каждого  из определений толкового словаря.
    15. Анализируется множество функций интерпретации для . Если они определены для всех элементов, то осуществляется переход к п. 16. Иначе осуществляется возврат к п. 14.
    16. Выполняется построение онтографа по элементам множества понятий .
    17. Анализируется на полноту и непротиворечивость онтограф и его формализованное описание. Если указанные критерии выполнены, то осуществляется переход к п. 34. Иначе выполняется возврат к п. 10 для реинжиниринга онтологии объектов.
    18. Выполняется построение множества . Составляются списки элементов  и присваиваются им имена.
    19. Анализируется исчерпание списка терминов, входящих в множество Т-П. Если список исчерпан, то выполняется переход к п. 20. Иначе осуществляется возврат к п. 18.
    20. Выполняется построение множества : формируются множества пар ,  в соответствии с отношением “выше-ниже”; анализируются и устанавливаются взаимосвязи ; строится предварительный онтограф для .
    21. Анализируется установление отношений для всех пар . Если отношения установлены для всех пар, то выполняется переход к п. 22. Иначе осуществляется возврат к п. 20.
    22. Выполняется построение множества : приписываются свойства для каждого  из списка свойств Т-П; формируются функции интерпретации  для каждого  из определений толкового словаря.
    23. Анализируется множество функций интерпретации для . Если они определены для всех элементов, то осуществляется переход к п. 24. Иначе осуществляется возврат к п. 22.
    24. Выполняется построение онтографа по элементам множества понятий .
    25. Анализируется на полноту и непротиворечивость онтограф и его формализованное описание. Если указанные критерии выполнены, то осуществляется переход к п. 34. Иначе выполняется возврат к п. 18 для реинжиниринга онтологии процессов.
    26. Выполняется построение множества . Составляются списки элементов  и присваиваются им имена.
    27. Анализируется исчерпание списка терминов, входящих в множество Т-З. Если список исчерпан, то выполняется переход к п. 28. Иначе осуществляется возврат к п. 26.
    28. Выполняется построение множества : формируются множества пар ,  в соответствии с отношением “выше-ниже”; анализируются и устанавливаются взаимосвязи ; строится предварительный онтограф для .
    29. Анализируется установление отношений для всех пар . Если отношения установлены для всех пар, то выполняется переход к п. 30. Иначе осуществляется возврат к п. 28.
    30. Выполняется построение множества : приписываются свойства для каждого  из списка свойств Т-З; формируются функции интерпретации  для каждого  из определений толкового слова (или другого подходящего источника описания типовых наборов задач и процедур и методов их решения).
    31. Анализируется множество функций интерпретации для . Если они определены для всех элементов, то осуществляется переход к п. 32. Иначе осуществляется возврат к п. 30.
    32. Выполняется построение онтографа по элементам множества понятий .
    33. Анализируется на полноту и непротиворечивость онтограф и его формализованное описание. Если указанные критерии выполнены, то осуществляется переход к п. 34. Иначе выполняется возврат к п. 26 для реинжиниринга онтологии процессов.
    34. Анализируется, все ли онтологии (объектов, процессов и задач) построены. Если да – то END, иначе осуществляется возврат к п. 3.
     Алгоритм проектирования онтологии ПдО и онтологии задач представляет собой последовательность шагов анализа предметно-проблемных знаний и синтеза онтологических структур объектов, процессов и классов задач. Блоки 1-9 алгоритма описывают процесс анализа, а блоки 10-17, блоки 18-25 и блоки 26-33 – процессы синтеза соответственно онтологии объектов, онтологии процессов и онтологии задач. Алгоритм пригоден как для ручного, так и для автоматизированного проектирования указанных онтологий.
     Наибольший интерес представляет автоматизированный способ проектирования, так как даже для сравнительно небольших предметных областей списки терминов-понятий, терминов-процессов, терминов-отношений и теминов, описывающих классы задач, могут составлять несколько тысяч записей. Составление вручную таких списков представляется проблематичным. В главе 6 описывается инструментальный комплекс, программные модули которого реализуют, в частности, представленный на рис. 4.9 алгоритм.


1. 
1 Под термином “согласованность” имеется в виду общезначимость, общепринятость.
2 Таких определений известно несколько десятков.
3 Классификации онтологий по различным основаниям приведены в многочисленной литературе [4, 45, 101 и др.].
??

??

??

??




1





